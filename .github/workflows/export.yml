name: Exportar Paquete desde Appian Dev

on:
  workflow_dispatch:
    inputs:
      app_name:
        description: 'Nombre de la aplicación Appian'
        required: true
      package_name:
        description: 'Nombre del paquete a exportar'
        required: true
      description:
        description: 'Descripción del despliegue (opcional)'
        required: false

jobs:
  export-package:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout del repositorio
        uses: actions/checkout@v4

      - name: Crear directorio para el paquete exportado
        run: mkdir -p packages/${{ github.event.inputs.package_name }}

      - name: Obtener UUID del paquete desde JSON local
        id: obtener_uuid
        run: |
          deployment_uuid=$(jq -r '.["${{ github.event.inputs.app_name }}"]["${{ github.event.inputs.package_name }}"]' config/packages_result.json)
          echo "UUID resuelto: $deployment_uuid"
          echo "deployment_uuid=$deployment_uuid" >> $GITHUB_OUTPUT

      - name: Exportar paquete desde Appian Dev
        run: |
          curl --location --request POST "${{ vars.APP_URL_DEV }}/suite/deployment-management/v2/deployments" \
          --header "appian-api-key: ${{ secrets.API_KEY_DEV }}" \
          --header "Action-Type: export" \
          --form 'json={
            "exportType": "package",
            "uuids": ["${{ steps.obtener_uuid.outputs.deployment_uuid }}"],
            "name": "${{ github.event.inputs.package_name }}",
            "description": "${{ github.event.inputs.description }}"
          }' \
          --output export_response.json

      - name: Extraer UUID de la exportación
        id: extract_uuid
        run: |
          export_uuid=$(jq -r '.uuid' export_response.json)
          echo "UUID de exportación: $export_uuid"
          echo "::set-output name=export_uuid::$export_uuid"

      - name: Esperar a que la exportación se complete
        run: |
          status="IN_PROGRESS"
          while [ "$status" == "IN_PROGRESS" ]; do
            sleep 10
            response=$(curl --location --request GET "${{ vars.APP_URL_DEV }}/suite/deployment-management/v2/deployments/${{ steps.extract_uuid.outputs.export_uuid }}" \
            --header "appian-api-key: ${{ secrets.API_KEY_DEV }}")
            status=$(echo $response | jq -r '.status')
            echo "Estado actual: $status"
          done
          if [ "$status" != "COMPLETED" ]; then
            echo "La exportación falló con estado: $status"
            exit 1
          fi

      - name: Descargar paquete exportado
        run: |
          package_url=$(curl --location --request GET "${{ vars.APP_URL_DEV }}/suite/deployment-management/v2/deployments/${{ steps.extract_uuid.outputs.export_uuid }}" \
          --header "appian-api-key: ${{ secrets.API_KEY_DEV }}" | jq -r '.packageZip')
          curl --location --request GET "$package_url" \
          --header "appian-api-key: ${{ secrets.API_KEY_DEV }}" \
          --output packages/${{ github.event.inputs.package_name }}/${{ github.event.inputs.package_name }}.zip

      - name: Confirmar paquete exportado
        run: ls -lh packages/${{ github.event.inputs.package_name }}